PROJECT(hb_db C)

ADD_FILTER(
src
	hb_db.h
	hb_db.c
)

ADD_DEFINITIONS(-DMONGOC_STATIC)
ADD_DEFINITIONS(-DBSON_STATIC)

INCLUDE_DIRECTORIES(${HUMMINGBIRD_CONFIGURATION_DIRECTORY}/mongo/install/mongoc)
INCLUDE_DIRECTORIES(${HUMMINGBIRD_CONFIGURATION_DIRECTORY}/mongo/install/bson)
INCLUDE_DIRECTORIES(${HUMMINGBIRD_DEPENDENCIES_SOURCE_DIRECTORY}/mongo/src/libbson/src)
INCLUDE_DIRECTORIES(${HUMMINGBIRD_DEPENDENCIES_SOURCE_DIRECTORY}/mongo/src/libmongoc/src)

ADD_LIBRARY(${PROJECT_NAME} STATIC ${HUMMINGBIRD_SOURCE_FILES})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_config)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_utils)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_log)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${HUMMINGBIRD_DEPENDENCIES_LIBRARY_DIRECTORY}/${CMAKE_STATIC_LIBRARY_PREFIX}mongoc-static-1.0${CMAKE_STATIC_LIBRARY_SUFFIX})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${HUMMINGBIRD_DEPENDENCIES_LIBRARY_DIRECTORY}/${CMAKE_STATIC_LIBRARY_PREFIX}bson-static-1.0${CMAKE_STATIC_LIBRARY_SUFFIX})

if(HUMMINGBIRD_TARGET_WIN32)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${HUMMINGBIRD_DEPENDENCIES_LIBRARY_DIRECTORY}/${CMAKE_STATIC_LIBRARY_PREFIX}zlib${CMAKE_STATIC_LIBRARY_SUFFIX})
elseif(HUMMINGBIRD_TARGET_UNIX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${HUMMINGBIRD_DEPENDENCIES_LIBRARY_DIRECTORY}/${CMAKE_STATIC_LIBRARY_PREFIX}z${CMAKE_STATIC_LIBRARY_SUFFIX})
endif()

if(HUMMINGBIRD_TARGET_WIN32)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Ws2_32.lib)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Crypt32.lib)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Bcrypt.lib)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Secur32.lib)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Dnsapi.lib)
elseif(HUMMINGBIRD_TARGET_UNIX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} resolv)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} rt)
    
    set(THREADS_PREFER_PTHREAD_FLAG ON)
    find_package(Threads REQUIRED)
    
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Threads::Threads)
ELSEIF(HUMMINGBIRD_TARGET_OSX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} resolv)
endif()
